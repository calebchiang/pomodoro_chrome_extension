{"ast":null,"code":"var _jsxFileName = \"/Users/calebchiang/Desktop/personal/pomodoro_chrome_extension/src/components/TaskModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/TaskModal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskModal = ({\n  tasks,\n  onAddTask,\n  onClose\n}) => {\n  _s();\n  const [newTask, setNewTask] = useState('');\n  const handleAddTask = () => {\n    if (!newTask.trim()) return;\n    onAddTask(newTask);\n    setNewTask(''); // Reset input field\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"taskModal roboto-bold\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: task.completed,\n          onChange: () => {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this), \" \", task.name]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTask,\n      onChange: e => setNewTask(e.target.value),\n      placeholder: \"Add a new task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskModal, \"QOAGQFXMDiH3FEIJhH0k9gfFdKU=\");\n_c = TaskModal;\nexport default TaskModal;\nvar _c;\n$RefreshReg$(_c, \"TaskModal\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskModal","tasks","onAddTask","onClose","_s","newTask","setNewTask","handleAddTask","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","index","type","checked","completed","onChange","name","value","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/calebchiang/Desktop/personal/pomodoro_chrome_extension/src/components/TaskModal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../styles/TaskModal.css';\n\nconst TaskModal = ({ tasks, onAddTask, onClose }) => {\n    const [newTask, setNewTask] = useState('');\n\n    const handleAddTask = () => {\n        if (!newTask.trim()) return;\n        onAddTask(newTask);\n        setNewTask(''); // Reset input field\n    };\n\n    return (\n        <div className=\"taskModal roboto-bold\">\n            <h2>Tasks</h2>\n            <ul>\n                {tasks.map((task, index) => (\n                    <li key={index}>\n                        <input type=\"checkbox\" checked={task.completed} onChange={() => {}} /> {task.name}\n                    </li>\n                ))}\n            </ul>\n            <input\n                type=\"text\"\n                value={newTask}\n                onChange={(e) => setNewTask(e.target.value)}\n                placeholder=\"Add a new task\"\n            />\n            <button onClick={handleAddTask}>Add Task</button>\n            <button onClick={onClose}>Close</button>\n        </div>\n    );\n};\n\nexport default TaskModal;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,SAAS,GAAGA,CAAC;EAAEC,KAAK;EAAEC,SAAS;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAI,CAACF,OAAO,CAACG,IAAI,CAAC,CAAC,EAAE;IACrBN,SAAS,CAACG,OAAO,CAAC;IAClBC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;EACpB,CAAC;EAED,oBACIP,OAAA;IAAKU,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBAClCX,OAAA;MAAAW,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdf,OAAA;MAAAW,QAAA,EACKT,KAAK,CAACc,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACnBlB,OAAA;QAAAW,QAAA,gBACIX,OAAA;UAAOmB,IAAI,EAAC,UAAU;UAACC,OAAO,EAAEH,IAAI,CAACI,SAAU;UAACC,QAAQ,EAAEA,CAAA,KAAM,CAAC;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,KAAC,EAACE,IAAI,CAACM,IAAI;MAAA,GAD5EL,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACLf,OAAA;MACImB,IAAI,EAAC,MAAM;MACXK,KAAK,EAAElB,OAAQ;MACfgB,QAAQ,EAAGG,CAAC,IAAKlB,UAAU,CAACkB,CAAC,CAACC,MAAM,CAACF,KAAK,CAAE;MAC5CG,WAAW,EAAC;IAAgB;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACFf,OAAA;MAAQ4B,OAAO,EAAEpB,aAAc;MAAAG,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjDf,OAAA;MAAQ4B,OAAO,EAAExB,OAAQ;MAAAO,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEd,CAAC;AAACV,EAAA,CA7BIJ,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AA+Bf,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}