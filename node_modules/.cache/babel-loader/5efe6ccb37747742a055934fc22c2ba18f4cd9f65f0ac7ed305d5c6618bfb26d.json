{"ast":null,"code":"var _jsxFileName = \"/Users/calebchiang/Desktop/personal/pomodoro_chrome_extension/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TimerDisplay from './components/TimerDisplay';\nimport StartStopButton from './components/StartStopButton';\nimport TaskModal from './components/TaskModal';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [fontClass, setFontClass] = useState('sixtyfour');\n  const fontClasses = ['sixtyfour', 'honk', 'nunito']; // Array of font classes\n  const changeFont = () => {\n    const currentIndex = fontClasses.indexOf(fontClass);\n    const nextIndex = (currentIndex + 1) % fontClasses.length;\n    setFontClass(fontClasses[nextIndex]);\n  };\n  const [tasks, setTasks] = useState([]); // Initial tasks state\n  const [showModal, setShowModal] = useState(false); // Modal visibility state\n\n  const addTask = taskName => {\n    const newTask = {\n      name: taskName,\n      completed: false\n    };\n    setTasks([...tasks, newTask]);\n  };\n  const handleShowModal = () => setShowModal(true);\n  const handleCloseModal = () => setShowModal(false);\n  const [isRunning, setIsRunning] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(25 * 60); // 25 minutes\n\n  useEffect(() => {\n    let interval = null;\n    if (isRunning) {\n      interval = setInterval(() => {\n        setTimeLeft(prevTime => prevTime - 1);\n      }, 1000);\n    } else {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isRunning]);\n  const handleStartStop = () => {\n    setIsRunning(!isRunning);\n  };\n\n  // Format timeLeft into minutes and seconds for display\n  const formattedTime = `${Math.floor(timeLeft / 60)}:${('0' + timeLeft % 60).slice(-2)}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo honk-button\",\n      children: \"Pomodoro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TimerDisplay, {\n      timeLeft: formattedTime,\n      fontClass: fontClass\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(StartStopButton, {\n        isRunning: isRunning,\n        handleStartStop: handleStartStop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"task-button roboto-bold\",\n        onClick: handleShowModal,\n        children: \"Add Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), showModal && /*#__PURE__*/_jsxDEV(TaskModal, {\n      tasks: tasks,\n      onAddTask: addTask,\n      onClose: handleCloseModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"timer-theme-button\",\n      onClick: changeFont,\n      children: \"Timer Theme\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 7\n  }, this);\n};\n_s(App, \"Bn/Czwz12o+pkX/eQmpmRmxCTOA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TimerDisplay","StartStopButton","TaskModal","jsxDEV","_jsxDEV","App","_s","fontClass","setFontClass","fontClasses","changeFont","currentIndex","indexOf","nextIndex","length","tasks","setTasks","showModal","setShowModal","addTask","taskName","newTask","name","completed","handleShowModal","handleCloseModal","isRunning","setIsRunning","timeLeft","setTimeLeft","interval","setInterval","prevTime","clearInterval","handleStartStop","formattedTime","Math","floor","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onAddTask","onClose","_c","$RefreshReg$"],"sources":["/Users/calebchiang/Desktop/personal/pomodoro_chrome_extension/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TimerDisplay from './components/TimerDisplay';\nimport StartStopButton from './components/StartStopButton';\nimport TaskModal from './components/TaskModal';\n\nimport './App.css';\n\nconst App = () => {\n\n    const [fontClass, setFontClass] = useState('sixtyfour');\n    const fontClasses = ['sixtyfour', 'honk', 'nunito']; // Array of font classes\n    const changeFont = () => {\n        const currentIndex = fontClasses.indexOf(fontClass);\n        const nextIndex = (currentIndex + 1) % fontClasses.length;\n        setFontClass(fontClasses[nextIndex]);\n    };\n\n\n  const [tasks, setTasks] = useState([]); // Initial tasks state\n  const [showModal, setShowModal] = useState(false); // Modal visibility state\n\n  const addTask = (taskName) => {\n    const newTask = { name: taskName, completed: false };\n    setTasks([...tasks, newTask]);\n  };\n\n  const handleShowModal = () => setShowModal(true);\n  const handleCloseModal = () => setShowModal(false);const [isRunning, setIsRunning] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(25 * 60); // 25 minutes\n\n  useEffect(() => {\n    let interval = null;\n\n    if (isRunning) {\n      interval = setInterval(() => {\n        setTimeLeft(prevTime => prevTime - 1);\n      }, 1000);\n    } else {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [isRunning]);\n\n  const handleStartStop = () => {\n    setIsRunning(!isRunning);\n  };\n\n  // Format timeLeft into minutes and seconds for display\n  const formattedTime = `${Math.floor(timeLeft / 60)}:${('0' + (timeLeft % 60)).slice(-2)}`;\n\n  return (\n      <div className = \"App\">\n        <div className = \"logo honk-button\">Pomodoro</div>\n        <TimerDisplay timeLeft={formattedTime} fontClass={fontClass} />\n        <div className = \"button-container\">\n        <StartStopButton isRunning={isRunning} handleStartStop={handleStartStop} />\n        <button className = \"task-button roboto-bold\" onClick={handleShowModal}>Add Tasks</button>\n        </div>\n        {showModal && <TaskModal tasks={tasks} onAddTask={addTask} onClose={handleCloseModal} />}\n        <button className = \"timer-theme-button\"  onClick={changeFont}>Timer Theme</button>\n      </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}