{"ast":null,"code":"import React,{useState,useEffect}from'react';import TimerDisplay from'./components/TimerDisplay';import StartStopButton from'./components/StartStopButton';import TaskModal from'./components/TaskModal';import'./App.css';// Main App component\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{// State for tracking timer status, time left, tasks, modal visibility, session status, and font class\nconst[isRunning,setIsRunning]=useState(false);const[timeLeft,setTimeLeft]=useState(25*60);// Timer starts at 25 minutes\nconst[tasks,setTasks]=useState([]);const[showModal,setShowModal]=useState(false);const[inSession,setInSession]=useState(false);const[fontClass,setFontClass]=useState('sixtyfour');// Initial font class for timer\nconst fontClasses=['sixtyfour','honk','nunito'];// Font class options for the timer\n// Function to cycle through available fonts\nconst changeFont=()=>{const currentIndex=fontClasses.indexOf(fontClass);const nextIndex=(currentIndex+1)%fontClasses.length;setFontClass(fontClasses[nextIndex]);};// Function to add a new task\nconst addTask=taskName=>{const newTask={name:taskName,completed:false};setTasks([...tasks,newTask]);};// Functions to handle modal visibility\nconst handleShowModal=()=>setShowModal(true);const handleCloseModal=()=>setShowModal(false);// Effect hook to handle timer functionality\nuseEffect(()=>{let interval=null;if(isRunning){interval=setInterval(()=>{setTimeLeft(prevTime=>prevTime>0?prevTime-1:0);},1000);setInSession(true);}else{clearInterval(interval);if(timeLeft<=0)setInSession(false);}return()=>clearInterval(interval);},[isRunning,timeLeft]);// Function to start/stop the timer\nconst handleStartStop=()=>{setIsRunning(!isRunning);};// Format the remaining time for display\nconst formattedTime=\"\".concat(Math.floor(timeLeft/60),\":\").concat(('0'+timeLeft%60).slice(-2));// JSX for the App component\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"App \".concat(inSession?'session-background':''),children:[!inSession&&/*#__PURE__*/_jsx(\"div\",{className:\"logo honk-button \".concat(inSession?'hide-logo':''),children:\"Pomo\"}),/*#__PURE__*/_jsx(\"div\",{className:\"timer-container \".concat(inSession?'session-mode':''),children:/*#__PURE__*/_jsx(TimerDisplay,{timeLeft:formattedTime,fontClass:fontClass})}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-container \".concat(inSession?'session-mode':''),children:[/*#__PURE__*/_jsx(StartStopButton,{isRunning:isRunning,handleStartStop:handleStartStop}),/*#__PURE__*/_jsx(\"button\",{className:\"task-button roboto-bold\",onClick:handleShowModal,children:\"Add Tasks\"})]}),showModal&&/*#__PURE__*/_jsx(TaskModal,{tasks:tasks,onAddTask:addTask,onClose:handleCloseModal}),/*#__PURE__*/_jsx(\"button\",{className:\"change-timer-btn play-regular\",onClick:changeFont,children:\"[ change timer ]\"})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","TimerDisplay","StartStopButton","TaskModal","jsx","_jsx","jsxs","_jsxs","App","isRunning","setIsRunning","timeLeft","setTimeLeft","tasks","setTasks","showModal","setShowModal","inSession","setInSession","fontClass","setFontClass","fontClasses","changeFont","currentIndex","indexOf","nextIndex","length","addTask","taskName","newTask","name","completed","handleShowModal","handleCloseModal","interval","setInterval","prevTime","clearInterval","handleStartStop","formattedTime","concat","Math","floor","slice","className","children","onClick","onAddTask","onClose"],"sources":["/Users/calebchiang/Desktop/personal/pomodoro_chrome_extension/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TimerDisplay from './components/TimerDisplay';\nimport StartStopButton from './components/StartStopButton';\nimport TaskModal from './components/TaskModal';\nimport './App.css';\n\n// Main App component\nconst App = () => {\n    // State for tracking timer status, time left, tasks, modal visibility, session status, and font class\n    const [isRunning, setIsRunning] = useState(false);\n    const [timeLeft, setTimeLeft] = useState(25 * 60); // Timer starts at 25 minutes\n    const [tasks, setTasks] = useState([]);\n    const [showModal, setShowModal] = useState(false);\n    const [inSession, setInSession] = useState(false);\n    const [fontClass, setFontClass] = useState('sixtyfour'); // Initial font class for timer\n    const fontClasses = ['sixtyfour', 'honk', 'nunito']; // Font class options for the timer\n\n    // Function to cycle through available fonts\n    const changeFont = () => {\n        const currentIndex = fontClasses.indexOf(fontClass);\n        const nextIndex = (currentIndex + 1) % fontClasses.length;\n        setFontClass(fontClasses[nextIndex]);\n    };\n\n    // Function to add a new task\n    const addTask = (taskName) => {\n        const newTask = { name: taskName, completed: false };\n        setTasks([...tasks, newTask]);\n    };\n\n    // Functions to handle modal visibility\n    const handleShowModal = () => setShowModal(true);\n    const handleCloseModal = () => setShowModal(false);\n\n    // Effect hook to handle timer functionality\n    useEffect(() => {\n        let interval = null;\n\n        if (isRunning) {\n            interval = setInterval(() => {\n                setTimeLeft(prevTime => prevTime > 0 ? prevTime - 1 : 0);\n            }, 1000);\n            setInSession(true);\n        } else {\n            clearInterval(interval);\n            if (timeLeft <= 0) setInSession(false);\n        }\n\n        return () => clearInterval(interval);\n    }, [isRunning, timeLeft]);\n\n    // Function to start/stop the timer\n    const handleStartStop = () => {\n        setIsRunning(!isRunning);\n    };\n\n    // Format the remaining time for display\n    const formattedTime = `${Math.floor(timeLeft / 60)}:${('0' + (timeLeft % 60)).slice(-2)}`;\n\n    // JSX for the App component\n    return (\n        <div className={`App ${inSession ? 'session-background' : ''}`}>\n            {!inSession && (\n                <div className={`logo honk-button ${inSession ? 'hide-logo' : ''}`}>\n                    Pomo\n                </div>\n            )}\n\n            <div className={`timer-container ${inSession ? 'session-mode' : ''}`}>\n                <TimerDisplay timeLeft={formattedTime} fontClass={fontClass} />\n            </div>\n\n            <div className={`button-container ${inSession ? 'session-mode' : ''}`}>\n                <StartStopButton isRunning={isRunning} handleStartStop={handleStartStop} />\n                <button className=\"task-button roboto-bold\" onClick={handleShowModal}>Add Tasks</button>\n            </div>\n\n            {showModal && <TaskModal tasks={tasks} onAddTask={addTask} onClose={handleCloseModal} />}\n\n            <button className=\"change-timer-btn play-regular\" onClick={changeFont}>[ change timer ]</button>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}