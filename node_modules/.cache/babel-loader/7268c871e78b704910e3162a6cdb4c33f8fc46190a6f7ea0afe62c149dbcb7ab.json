{"ast":null,"code":"import React,{useState,useEffect}from'react';import TimerDisplay from'./components/TimerDisplay';import StartStopButton from'./components/StartStopButton';import TaskModal from'./components/TaskModal';import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[isRunning,setIsRunning]=useState(false);const[timeLeft,setTimeLeft]=useState(25*60);// 25 minutes\nconst[tasks,setTasks]=useState([]);// Initial tasks state\nconst[showModal,setShowModal]=useState(false);// Modal visibility state\nconst[inSession,setInSession]=useState(false);// Manage session view\nconst[fontClass,setFontClass]=useState('sixtyfour');const fontClasses=['sixtyfour','honk','nunito'];// Array of font classes\nconst changeFont=()=>{const currentIndex=fontClasses.indexOf(fontClass);const nextIndex=(currentIndex+1)%fontClasses.length;setFontClass(fontClasses[nextIndex]);};const addTask=taskName=>{const newTask={name:taskName,completed:false};setTasks([...tasks,newTask]);};const handleShowModal=()=>setShowModal(true);const handleCloseModal=()=>setShowModal(false);useEffect(()=>{let interval=null;if(isRunning){interval=setInterval(()=>{setTimeLeft(prevTime=>prevTime>0?prevTime-1:0);},1000);setInSession(true);// Transition to session view when timer starts\n}else{clearInterval(interval);if(timeLeft<=0){setInSession(false);// Exit session view when timer stops and is complete\n}}return()=>clearInterval(interval);},[isRunning,timeLeft]);const handleStartStop=()=>{setIsRunning(!isRunning);};const formattedTime=\"\".concat(Math.floor(timeLeft/60),\":\").concat(('0'+timeLeft%60).slice(-2));return/*#__PURE__*/_jsxs(\"div\",{className:\"App \".concat(inSession?'session-background':''),children:[!inSession&&/*#__PURE__*/_jsx(\"div\",{className:\"logo honk-button \".concat(inSession?'hide-logo':''),children:\"Pomo\"}),/*#__PURE__*/_jsx(\"div\",{className:\"timer-container \".concat(inSession?'session-mode':''),children:/*#__PURE__*/_jsx(TimerDisplay,{timeLeft:formattedTime,fontClass:fontClass})}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-container \".concat(inSession?'session-mode':''),children:[/*#__PURE__*/_jsx(StartStopButton,{isRunning:isRunning,handleStartStop:handleStartStop}),/*#__PURE__*/_jsx(\"button\",{className:\"task-button roboto-bold\",onClick:handleShowModal,children:\"Add Tasks\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"task-display-container\",children:tasks.map((task,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"task-item\",children:[task.name,\" \"]},index))}),showModal&&/*#__PURE__*/_jsx(TaskModal,{tasks:tasks,onAddTask:addTask,onClose:handleCloseModal}),/*#__PURE__*/_jsx(\"button\",{className:\"change-timer-btn play-regular\",onClick:changeFont,children:\"[ change timer ]\"})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","TimerDisplay","StartStopButton","TaskModal","jsx","_jsx","jsxs","_jsxs","App","isRunning","setIsRunning","timeLeft","setTimeLeft","tasks","setTasks","showModal","setShowModal","inSession","setInSession","fontClass","setFontClass","fontClasses","changeFont","currentIndex","indexOf","nextIndex","length","addTask","taskName","newTask","name","completed","handleShowModal","handleCloseModal","interval","setInterval","prevTime","clearInterval","handleStartStop","formattedTime","concat","Math","floor","slice","className","children","onClick","map","task","index","onAddTask","onClose"],"sources":["/Users/calebchiang/Desktop/personal/pomodoro_chrome_extension/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TimerDisplay from './components/TimerDisplay';\nimport StartStopButton from './components/StartStopButton';\nimport TaskModal from './components/TaskModal';\n\nimport './App.css';\n\nconst App = () => {\n    const [isRunning, setIsRunning] = useState(false);\n    const [timeLeft, setTimeLeft] = useState(25 * 60); // 25 minutes\n    const [tasks, setTasks] = useState([]); // Initial tasks state\n    const [showModal, setShowModal] = useState(false); // Modal visibility state\n    const [inSession, setInSession] = useState(false); // Manage session view\n    const [fontClass, setFontClass] = useState('sixtyfour');\n    const fontClasses = ['sixtyfour', 'honk', 'nunito', ]; // Array of font classes\n\n    const changeFont = () => {\n        const currentIndex = fontClasses.indexOf(fontClass);\n        const nextIndex = (currentIndex + 1) % fontClasses.length;\n        setFontClass(fontClasses[nextIndex]);\n    };\n\n    const addTask = (taskName) => {\n        const newTask = {name: taskName, completed: false};\n        setTasks([...tasks, newTask]);\n    };\n\n    const handleShowModal = () => setShowModal(true);\n    const handleCloseModal = () => setShowModal(false);\n\n    useEffect(() => {\n        let interval = null;\n\n        if (isRunning) {\n            interval = setInterval(() => {\n                setTimeLeft(prevTime => prevTime > 0 ? prevTime - 1 : 0);\n            }, 1000);\n            setInSession(true); // Transition to session view when timer starts\n        } else {\n            clearInterval(interval);\n            if (timeLeft <= 0) {\n                setInSession(false); // Exit session view when timer stops and is complete\n            }\n        }\n\n        return () => clearInterval(interval);\n    }, [isRunning, timeLeft]);\n\n    const handleStartStop = () => {\n        setIsRunning(!isRunning);\n    };\n\n    const formattedTime = `${Math.floor(timeLeft / 60)}:${('0' + (timeLeft % 60)).slice(-2)}`;\n\n    return (\n        <div className={`App ${inSession ? 'session-background' : ''}`}>\n            {!inSession && (\n                <div className={`logo honk-button ${inSession ? 'hide-logo' : ''}`}>\n                    Pomo\n                </div>\n            )}\n\n            <div className={`timer-container ${inSession ? 'session-mode' : ''}`}>\n                <TimerDisplay timeLeft={formattedTime} fontClass={fontClass} />\n            </div>\n\n            {/* Always visible button container */}\n            <div className={`button-container ${inSession ? 'session-mode' : ''}`}>\n                <StartStopButton isRunning={isRunning} handleStartStop={handleStartStop} />\n                <button className=\"task-button roboto-bold\" onClick={handleShowModal}>Add Tasks</button>\n            </div>\n\n            {/* New task display container */}\n            <div className=\"task-display-container\">\n                {/* Map through tasks and display them here */}\n                {tasks.map((task, index) => (\n                    <div key={index} className=\"task-item\">\n                        {task.name} {/* Add checkboxes or other task-related UI here */}\n                    </div>\n                ))}\n            </div>\n\n\n            {showModal && <TaskModal tasks={tasks} onAddTask={addTask} onClose={handleCloseModal} />}\n\n            {/* Session-specific content (like tasks list) goes here, if needed */}\n            <button className=\"change-timer-btn play-regular\" onClick={changeFont}>[ change timer ]</button>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}