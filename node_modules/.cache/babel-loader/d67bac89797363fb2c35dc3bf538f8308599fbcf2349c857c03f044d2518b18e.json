{"ast":null,"code":"import React,{useState,useEffect}from'react';import TimerDisplay from'./components/TimerDisplay';import StartStopButton from'./components/StartStopButton';import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[tasks,setTasks]=useState([]);// Initial tasks state\nconst[showModal,setShowModal]=useState(false);// Modal visibility state\nconst addTask=taskName=>{const newTask={name:taskName,completed:false};setTasks([...tasks,newTask]);};const handleShowModal=()=>setShowModal(true);const handleCloseModal=()=>setShowModal(false);const[isRunning,setIsRunning]=useState(false);const[timeLeft,setTimeLeft]=useState(25*60);// 25 minutes\nuseEffect(()=>{let interval=null;if(isRunning){interval=setInterval(()=>{setTimeLeft(prevTime=>prevTime-1);},1000);}else{clearInterval(interval);}return()=>clearInterval(interval);},[isRunning]);const handleStartStop=()=>{setIsRunning(!isRunning);};// Format timeLeft into minutes and seconds for display\nconst formattedTime=\"\".concat(Math.floor(timeLeft/60),\":\").concat(('0'+timeLeft%60).slice(-2));return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"logo honk-button\",children:\"Pomodoro\"}),/*#__PURE__*/_jsx(TimerDisplay,{timeLeft:formattedTime}),/*#__PURE__*/_jsx(StartStopButton,{isRunning:isRunning,handleStartStop:handleStartStop}),/*#__PURE__*/_jsx(\"button\",{onClick:handleShowModal,children:\"Add Tasks\"}),showModal&&/*#__PURE__*/_jsx(TaskModal,{tasks:tasks,onAddTask:addTask,onClose:handleCloseModal})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","TimerDisplay","StartStopButton","jsx","_jsx","jsxs","_jsxs","App","tasks","setTasks","showModal","setShowModal","addTask","taskName","newTask","name","completed","handleShowModal","handleCloseModal","isRunning","setIsRunning","timeLeft","setTimeLeft","interval","setInterval","prevTime","clearInterval","handleStartStop","formattedTime","concat","Math","floor","slice","className","children","onClick","TaskModal","onAddTask","onClose"],"sources":["/Users/calebchiang/Desktop/personal/pomodoro_chrome_extension/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TimerDisplay from './components/TimerDisplay';\nimport StartStopButton from './components/StartStopButton';\nimport './App.css';\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]); // Initial tasks state\n  const [showModal, setShowModal] = useState(false); // Modal visibility state\n\n  const addTask = (taskName) => {\n    const newTask = { name: taskName, completed: false };\n    setTasks([...tasks, newTask]);\n  };\n\n  const handleShowModal = () => setShowModal(true);\n  const handleCloseModal = () => setShowModal(false);const [isRunning, setIsRunning] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(25 * 60); // 25 minutes\n\n  useEffect(() => {\n    let interval = null;\n\n    if (isRunning) {\n      interval = setInterval(() => {\n        setTimeLeft(prevTime => prevTime - 1);\n      }, 1000);\n    } else {\n      clearInterval(interval);\n    }\n\n    return () => clearInterval(interval);\n  }, [isRunning]);\n\n  const handleStartStop = () => {\n    setIsRunning(!isRunning);\n  };\n\n  // Format timeLeft into minutes and seconds for display\n  const formattedTime = `${Math.floor(timeLeft / 60)}:${('0' + (timeLeft % 60)).slice(-2)}`;\n\n  return (\n      <div className = \"App\">\n        <div className = \"logo honk-button\">Pomodoro</div>\n        <TimerDisplay timeLeft={formattedTime} />\n        <StartStopButton isRunning={isRunning} handleStartStop={handleStartStop} />\n        <button onClick={handleShowModal}>Add Tasks</button>\n        {showModal && <TaskModal tasks={tasks} onAddTask={addTask} onClose={handleCloseModal} />}\n      </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,YAAY,KAAM,2BAA2B,CACpD,MAAO,CAAAC,eAAe,KAAM,8BAA8B,CAC1D,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEnB,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAAE;AACxC,KAAM,CAACW,SAAS,CAAEC,YAAY,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CAAE;AAEnD,KAAM,CAAAa,OAAO,CAAIC,QAAQ,EAAK,CAC5B,KAAM,CAAAC,OAAO,CAAG,CAAEC,IAAI,CAAEF,QAAQ,CAAEG,SAAS,CAAE,KAAM,CAAC,CACpDP,QAAQ,CAAC,CAAC,GAAGD,KAAK,CAAEM,OAAO,CAAC,CAAC,CAC/B,CAAC,CAED,KAAM,CAAAG,eAAe,CAAGA,CAAA,GAAMN,YAAY,CAAC,IAAI,CAAC,CAChD,KAAM,CAAAO,gBAAgB,CAAGA,CAAA,GAAMP,YAAY,CAAC,KAAK,CAAC,CAAC,KAAM,CAACQ,SAAS,CAAEC,YAAY,CAAC,CAAGrB,QAAQ,CAAC,KAAK,CAAC,CACpG,KAAM,CAACsB,QAAQ,CAAEC,WAAW,CAAC,CAAGvB,QAAQ,CAAC,EAAE,CAAG,EAAE,CAAC,CAAE;AAEnDC,SAAS,CAAC,IAAM,CACd,GAAI,CAAAuB,QAAQ,CAAG,IAAI,CAEnB,GAAIJ,SAAS,CAAE,CACbI,QAAQ,CAAGC,WAAW,CAAC,IAAM,CAC3BF,WAAW,CAACG,QAAQ,EAAIA,QAAQ,CAAG,CAAC,CAAC,CACvC,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,IAAM,CACLC,aAAa,CAACH,QAAQ,CAAC,CACzB,CAEA,MAAO,IAAMG,aAAa,CAACH,QAAQ,CAAC,CACtC,CAAC,CAAE,CAACJ,SAAS,CAAC,CAAC,CAEf,KAAM,CAAAQ,eAAe,CAAGA,CAAA,GAAM,CAC5BP,YAAY,CAAC,CAACD,SAAS,CAAC,CAC1B,CAAC,CAED;AACA,KAAM,CAAAS,aAAa,IAAAC,MAAA,CAAMC,IAAI,CAACC,KAAK,CAACV,QAAQ,CAAG,EAAE,CAAC,MAAAQ,MAAA,CAAI,CAAC,GAAG,CAAIR,QAAQ,CAAG,EAAG,EAAEW,KAAK,CAAC,CAAC,CAAC,CAAC,CAAE,CAEzF,mBACI1B,KAAA,QAAK2B,SAAS,CAAG,KAAK,CAAAC,QAAA,eACpB9B,IAAA,QAAK6B,SAAS,CAAG,kBAAkB,CAAAC,QAAA,CAAC,UAAQ,CAAK,CAAC,cAClD9B,IAAA,CAACH,YAAY,EAACoB,QAAQ,CAAEO,aAAc,CAAE,CAAC,cACzCxB,IAAA,CAACF,eAAe,EAACiB,SAAS,CAAEA,SAAU,CAACQ,eAAe,CAAEA,eAAgB,CAAE,CAAC,cAC3EvB,IAAA,WAAQ+B,OAAO,CAAElB,eAAgB,CAAAiB,QAAA,CAAC,WAAS,CAAQ,CAAC,CACnDxB,SAAS,eAAIN,IAAA,CAACgC,SAAS,EAAC5B,KAAK,CAAEA,KAAM,CAAC6B,SAAS,CAAEzB,OAAQ,CAAC0B,OAAO,CAAEpB,gBAAiB,CAAE,CAAC,EACrF,CAAC,CAEZ,CAAC,CAED,cAAe,CAAAX,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}