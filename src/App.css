@keyframes fadeBackground {
  0% {
    background-image: linear-gradient(orange, white);
  }
  10% {
    background-image: linear-gradient(#ff8000, orange, white);
  }
  20% {
    background-image: linear-gradient(#ff6600, #ff8000, white);
  }
  30% {
    background-image: linear-gradient(#ff4d00, #ff6600, white);
  }
  40% {
    background-image: linear-gradient(#ff3300, #ff4d00, white);
  }
  50% {
    background-image: linear-gradient(#ff1a00, #ff3300, white);
  }
  60% {
    background-image: linear-gradient(#ff0000, #ff1a00, white);
  }
  70% {
    background-image: linear-gradient(#e60000, #ff0000, white);
  }
  80% {
    background-image: linear-gradient(#cc0000, #e60000, white);
  }
  90% {
    background-image: linear-gradient(#b30000, #cc0000, white);
  }
  100% {
    background-image: linear-gradient(red, white);
  }
}

.App {
  width: 300px;
  height: 350px;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background-image: linear-gradient(orange, white);
  position:relative;
  transition: background-color 2s ease;

}


.logo {
  font-family: 'Roboto', sans-serif;
  font-size: 24px;
  font-weight: bold;
  text-align: center;
  margin-bottom: 20px;
  transition: opacity 2s ease-in-out; /* Transition for the fade effect */
  opacity: 1;

}

/* Honk: CSS class for a variable style */
.honk-button {
  font-family: "Honk", system-ui;
  font-optical-sizing: auto;
  font-weight: 400;
  font-style: normal;
  font-variation-settings:
          "MORF" 15,
          "SHLN" 50;
}

.button-container{
  display: flex;
  justify-content: center; /* Align buttons in the center */
  gap: 10px; /* Add some space between the buttons */
}

.task-button{
  border: none;
  color: #fff;
  background-image: linear-gradient(30deg, grey, white);
  background-size: 100% auto;
  font-size: 14px;
  padding: 0.4em 1em;
  border-radius: 10px;
}

.timer-theme-button{
  position: absolute;
  top: 10px;
  right: 10px;
}

@keyframes pulse {
  0%, 100% {
    transform: scale(1); /* Return to normal after pulsing */
  }
  50% {
    transform: scale(1.05); /* Pulse effect */
  }
}

@keyframes moveToTop {
  from {
    transform: translateY(0);
  }
  to {
    transform: translateY(-50%); /* Or whatever value moves them to the desired position */
  }
}

.timer-container{
  animation: pulse 2s infinite ease-in-out;
}

.session-mode{ /* Move both timer and buttons */
  animation: moveToTop 2s forwards;
}

.session-background{
  animation: fadeBackground 1s ease-in-out forwards;
}

.change-timer-btn {
  position: absolute;
  left: 10px;
  bottom: 10px;
  background: transparent; /* Makes the button background transparent */
  border: none; /* Removes the border */
  color: #000; /* Set the text color as needed */
  cursor: pointer;
}


.task-item {
  /* Add styles for individual task items here */
  padding: 5px;
  margin: 5px 0;
  border: 1px solid #ccc; /* Example border */
  border-radius: 4px; /* Rounded corners for task items */
}

.timer-container {
  display: flex;
  justify-content: center;
  align-items: center;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  border-radius: 50%; /* Optional: if you want the timer to be in a circle */
  width: 100px; /* Or adjust to fit the size of your timer display */
  height: 100px; /* Match width for a perfect circle */
  background-image: linear-gradient(white,lightgrey);
}

@keyframes cooldownBackground {
  from {
    background-image: linear-gradient(red, white); /* Starting session gradient */
  }
  to {
    background-image: linear-gradient(lightblue, white); /* Cooldown session gradient */
  }
}

.cooldown-background {
  animation: cooldownBackground 1s ease-in-out forwards;
}
